name: Build

on:
  push:
    paths-ignore:
    - 'docs/**'
  pull_request:
    paths-ignore:
    - 'docs/**'

jobs:

  formatter:
    runs-on: ubuntu-latest
    name: Check java format
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: m273d15/java-format-action@v1.1-rc
      with:
        version: '1.6'
    
  build:
    runs-on: ubuntu-latest

    steps:
    # Pre-Build
    -  uses: actions/checkout@v1
       with:
        fetch-depth: 1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    # Build
    - name: Build and test with Gradle
      run: ./gradlew -PskipTestSuites=true -PaggregateTestResults=true -DmaxParallelForks=4 --no-daemon --parallel sarosEclipse sarosIntellij sarosServer

    # Post-Build
    # Success-Case
    - name: Upload eclipse build
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: saros-eclipse-${{ github.sha }}
        path: build/distribution/eclipse

    - name: Upload intellij build
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: saros-intellij-${{ github.sha }}
        path: build/distribution/intellij

    - name: Upload server build
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: saros-server-${{ github.sha }}
        path: build/distribution/server

    # Failure-Case
    - name: Check test report
      id: check-report
      if: failure()
      run: |
        [ -d 'build/reports/allTests' ] && echo "::set-output name=report-exist::true" || echo "::set-output name=report-exist::false"
      shell: 'bash'
    
    - name: Upload test results
      uses: actions/upload-artifact@v1
      if: failure() && steps.check-report.outputs.report-exist == 'true'
      with:
        name: test-results-${{ github.sha }}
        path: build/reports/allTests
